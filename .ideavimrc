let mapleader =" "
set easymotion
set commentary
set NERDTree
set surround
set clipboard+=unnamedplus
set scrolloff=5
set incsearch
set showmode
set showcmd
set highlightedyank
set multiple-cursors
nnoremap c "_c
set number relativenumber
" Enable autocompletion:
set wildmode=longest,list,full
" Perform dot commands over visual blocks:
vnoremap . :normal .<CR>
" Easymotion
map <leader> <Plug>(easymotion-prefix)
map <leader><leader>. <Plug>(easymotion-repeat)
map <leader><leader>f <Plug>(easymotion-bd-f)
map <leader><leader>j <Plug>(easymotion-bd-line)
map <leader><leader>k <Plug>(easymotion-bd-line)
map <leader><leader>w <Plug>(easymotion-bd-w)

map <leader>o :setlocal spell! spelllang=en_us<CR>
map <leader>o :setlocal spell! spelllang=en_us<CR>

"" NERDTree
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapCloseDir='h'
" Replace ex mode with gq
map Q gq

" Replace all is aliased to S.
nnoremap <leader>s :%s/\<<C-r><C-w>\>/<C-r><C-w>/gI<Left><Left><Left>

" Compile document, be it groff/LaTeX/markdown/etc.
map <leader>c :w! \| !compiler "<c-r>%"<CR>

" Open corresponding .pdf/.html or preview
map <leader>p :!opout <c-r>%<CR><CR>

set splitbelow splitright
map <leader>vd <Action>(GotoDeclaration)
map <leader>vh <Action>(QuickJavaDoc)
map <leader>vj <Action>(QuickTypeDefinition)
map <leader>vi <Action>(QuickImplementations)
map <leader>vsd <Action>(ShowErrorDescription)
map <leader>vca <Action>(ShowIntentionActions)
map <leader>gs <Action>(ActivateVersionControlToolWindow)
map <leader>vto <action>(OptimizeImports)<CR>
map <leader>vrn <Action>(RenameElement)<CR>
map <leader><c-f> <action>(reformatcode)
map <leader>u <Action>(LocalHistory.ShowHistory)
map <leader>r <Action>(Refactorings.QuickListPopupAction)<CR>

map <c-w>w <Action>(UnsplitAll)<esc>
map <c-w>q <Action>(CloseContent)<esc>
map <c-w>r <Action>(CloseAllEditorsButActive)<esc>
map g; <Action>(JumpToLastChange)
map g, <Action>(JumpToNextChange)

" General remaps
map <c-o> <Action>(Back)
map <c-i> <Action>(Forward)

" Jump to start and end of line using the home row keys
map H ^
map L $

" Shortcutting split navigation, saving a keypress:
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" General"
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

map <TAB> :action PreviousTab<CR>
map <s-TAB> :action NextTab<CR>

nnoremap Y yg$
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap J mzJ`z
vnoremap < <gv
vnoremap > >gv
nnoremap zc :action CollapseRegion<CR>
nnoremap zo :action ExpandRegion<CR>
nnoremap <leader>zc :action CollapseAllRegions<CR>
nnoremap <leader>zo :action ExpandAllRegions<CR>
xnoremap <leader>p "_dP
nnoremap ,r :action ActivateRunToolWindow<CR>
nnoremap ,f :action RerunFailedTests<CR>
map \r :source ~/.ideavimrc<CR>

map <leader>t <Action>(com.sburlyaev.cmd.plugin.actions.OpenTerminal)

nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y gg"+yG

nnoremap <leader>d "_d
vnoremap <leader>d "_d

" Settings
let g:highlightedyank_highlight_duration = "100"
let g:highlightedyank_highlight_color = "rgba(255, 146, 0, 100)"

